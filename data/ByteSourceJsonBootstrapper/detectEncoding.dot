digraph { 
0 [shape=box,style=filled,color=".0 .0 .83",label="(24,(2,15), foundEncoding)"];
1 [shape=box,style=filled,color=".0 .0 .83",label="(24,(2,3), foundEncoding)"];
2 [label="(18,(18,24), quad)\n(0,(18,24), this)"];
3 [shape=box,style=filled,color=".0 .0 .83",label="(23,(2,15), foundEncoding)"];
4 [shape=box,style=filled,color=".0 .0 .83",label="(23,(2,3), foundEncoding)"];
5 [label="(18,(19,23), quad)\n(0,(19,23), this)"];
6 [shape=box,style=filled,color=".0 .0 .83",label="(22,(2,15), foundEncoding)"];
7 [shape=box,style=filled,color=".0 .0 .83",label="(22,(2,3), foundEncoding)"];
8 [label="(18,(20,22), quad)\n(0,(20,22), this)"];
9 [shape=box,style=filled,color=".0 .0 .83",label="(18,(20,21), quad)\n(0,(20,21), this)"];
10 [label="(18,(19,20), quad)\n(0,(19,20), this)"];
11 [label="(18,(18,19), quad)\n(0,(18,19), this)"];
12 [label="(0,18, this._inputPtr)\n(0,18, this._inputBuffer)\n(0,18, this)\n(0,(0,18), this)"];
13 [shape=box,style=filled,color=".0 .0 .83",label="(17,(2,15), foundEncoding)"];
14 [shape=box,style=filled,color=".0 .0 .83",label="(17,(2,3), foundEncoding)"];
15 [label="(16,(16,17), i16)\n(0,(16,17), this)"];
16 [shape=box,style=filled,color=".0 .0 .83",label="(16,(16,2), i16)\n(0,(16,2), this)"];
17 [label="(0,16, this._inputPtr)\n(0,16, this._inputBuffer)\n(0,16, this)\n(0,(1,16), this)"];
18 [shape=box,style=filled,color=".0 .0 .83",label="(0,(1,2), this)"];
19 [label="(0,(0,1), this)"];
20 [shape=box,style=filled,color=".0 .0 .83",label="(0,(3,14), this._bytesPerChar)\n(0,(3,14), this)"];
21 [shape=box,style=filled,color=".0 .0 .83",label="(13,7, enc)\n(0,(3,13), this._bytesPerChar)\n(0,13, UTF8)\n(0,(3,13), this)"];
22 [shape=box,style=filled,color=".0 .0 .83",label="(0,(9,12), this._bigEndian)\n(0,(9,12), this)"];
23 [shape=box,style=filled,color=".0 .0 .83",label="(0,(9,10), this._bigEndian)\n(0,(9,10), this)"];
24 [label="(11,7, enc)\n(0,11, UTF16_BE)\n(0,11, UTF16_LE)\n(0,(3,9), this._bytesPerChar)\n(0,(3,9), this)"];
25 [shape=box,style=filled,color=".0 .0 .83",label="(0,(4,8), this._bigEndian)\n(0,(4,8), this)"];
26 [shape=box,style=filled,color=".0 .0 .83",label="(0,(4,5), this._bigEndian)\n(0,(4,5), this)"];
27 [label="(6,7, enc)\n(0,6, UTF32_BE)\n(0,6, UTF32_LE)\n(0,(3,4), this._bytesPerChar)\n(0,(3,4), this)"];
28 [shape=box,style=filled,color=".0 .0 .83",label="(0,(2,15), foundEncoding)"];
29 [label="(15,7, enc)\n(0,15, UTF8)"];
30 [label="(0,7, this._context)\n(0,7, this)"];
31 [shape=box,style=filled,color=".0 .0 .83",label="(0,(2,3), foundEncoding)"];
2 -> 0;
2 -> 1;
5 -> 3;
5 -> 4;
8 -> 6;
8 -> 7;
10 -> 8;
10 -> 9;
11 -> 5;
11 -> 10;
12 -> 2;
12 -> 11;
15 -> 13;
15 -> 14;
17 -> 15;
17 -> 16;
19 -> 17;
19 -> 18;
24 -> 22;
24 -> 23;
27 -> 25;
27 -> 26;
29 -> 0;
29 -> 3;
29 -> 6;
29 -> 13;
29 -> 28;
30 -> 21;
30 -> 24;
30 -> 27;
30 -> 29;
}