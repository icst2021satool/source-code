i/Library/Java/JavaVirtualMachines/jdk-12.jdk/Contents/Home/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=54029:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA CE.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/marcoschaim/projetos/asmexplore/target/test-classes:/Users/marcoschaim/projetos/asmexplore/target/classes:/Users/marcoschaim/.m2/repository/org/ow2/asm/asm/7.3.1/asm-7.3.1.jar:/Users/marcoschaim/.m2/repository/org/ow2/asm/asm-util/7.3.1/asm-util-7.3.1.jar:/Users/marcoschaim/.m2/repository/org/ow2/asm/asm-tree/7.3.1/asm-tree-7.3.1.jar:/Users/marcoschaim/.m2/repository/org/ow2/asm/asm-analysis/7.3.1/asm-analysis-7.3.1.jar:/Users/marcoschaim/.m2/repository/br/usp/each/saeg/asm-defuse/0.0.6/asm-defuse-0.0.6.jar:/Users/marcoschaim/.m2/repository/br/usp/each/saeg/saeg-commons/0.0.5/saeg-commons-0.0.5.jar:/Users/marcoschaim/.m2/repository/junit/junit/4.11/junit-4.11.jar:/Users/marcoschaim/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/marcoschaim/.m2/repository/br/usp/each/saeg/opal/0.0.4/opal-0.0.4.jar:/Users/marcoschaim/.m2/repository/org/apache/commons/commons-collections4/4.3/commons-collections4-4.3.jar:/Users/marcoschaim/.m2/repository/args4j/args4j/2.32/args4j-2.32.jar com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 br.usp.each.saeg.subsumption.graphdua.GraphduaTest,test5
Max
CFG(max):
blocks:
Block(5):[24, 25, 26, 27, 28, 29]
	Successors: 4
Block(1):[11, 12, 13, 14, 15, 16]
	Successors: 3 2
Block(4):[30, 31, 32, 33, 34, 35, 36, 37]
	Successors: 1
Block(0):[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	Successors: 1
Block(6):[]
	Successors:
Block(3):[17, 18, 19, 20, 21, 22, 23]
	Successors: 5 4
Block(2):[38, 39, 40, 41, 42]
	Successors: 6
invCFG(max):
blocks:
Block(0):[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	Inv Successors:
Block(6):[]
	Inv Successors: 2
Block(1):[11, 12, 13, 14, 15, 16]
	Inv Successors: 0 4
Block(4):[30, 31, 32, 33, 34, 35, 36, 37]
	Inv Successors: 5 3
Block(3):[17, 18, 19, 20, 21, 22, 23]
	Inv Successors: 1
Block(5):[24, 25, 26, 27, 28, 29]
	Inv Successors: 3
Block(2):[38, 39, 40, 41, 42]
	Inv Successors: 1
[0] = 0; [1] = 1; [2] = 2; [4] = 6; [6] = 3; [5] = 5; [3] = 4; 
[6] = 0; [2] = 1; [1] = 2; [5] = 4; [3] = 5; [4] = 3; [0] = 6; 
digraph max {
5 [label="5"]
1 [label="1"]
4 [label="4"]
0 [label="0"]
6 [label="6"]
3 [label="3"]
2 [label="2"]
{
node [shape=plaintext, fontsize=14];
setsNode_5 [label="def(5)={max}\nuse(5)={array,i}"];
setsNode_4 [label="def(4)={i}\nuse(4)={i}"];
setsNode_0 [label="def(0)={array,length,i,max}"];
setsNode_2 [label="use(2)={max}"];
}
{rank = same; 5 ;  setsNode_5}
{rank = same; 4 ;  setsNode_4}
{rank = same; 0 ;  setsNode_0}
{rank = same; 2 ;  setsNode_2}
5 -> 4;
1 -> 3[label="use(1,3)={length,i}",fontsize=14];1 -> 2[label="use(1,2)={length,i}",fontsize=14];
4 -> 1;
0 -> 1;
3 -> 5[label="use(3,5)={array,i,max}",fontsize=14];3 -> 4[label="use(3,4)={array,i,max}",fontsize=14];
2 -> 6;
}

1:(0,(3,5), array)
GraphDua((0,(3,5), array)):
digraph { /* (0,(3,5), array) */
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
4127 [label="4(3)"];
-5152 [label="-5(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 3 -> 1034;
 1034 -> 3096;
 3096 -> 4127;
 3096 -> -5152;
 4127 -> 1034;
 -5152 -> 4128;
 -5152 -> 4129;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 4128;
 3097 -> 5159;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
2:(0,(3,4), array)
GraphDua((0,(3,4), array)):
digraph { /* (0,(3,4), array) */
3 [label="0(3)"];
1034 [label="1(3)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
-4121 [label="-4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> 3096;
 5158 -> 4127;
 4127 -> 1034;
 3096 -> 5158;
 3096 -> -4121;
 -4121 -> 1035;
 -4121 -> 1036;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
3:(0,5, array)
GraphDua((0,5, array)):
digraph { /* (0,5, array) */
3 [label="0(3)"];
1034 [label="1(3)"];
5158 [label="5(3)"];
3096 [label="3(3)"];
4127 [label="4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 3 -> 1034;
 1034 -> 3096;
 5158 -> 4128;
 5158 -> 4129;
 3096 -> 5158;
 3096 -> 4127;
 4127 -> 1034;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
4:(0,(1,3), length)
GraphDua((0,(1,3), length)):
digraph { /* (0,(1,3), length) */
-3090 [label="-3(3)"];
3 [label="0(3)"];
1034 [label="1(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 -3090 -> 5159;
 -3090 -> 4128;
 -3090 -> 5160;
 -3090 -> 4129;
 3 -> 1034;
 1034 -> -3090;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 3097 -> 5160;
 3097 -> 4129;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 5160;
 3098 -> 4129;
}
5:(0,(1,2), length)
GraphDua((0,(1,2), length)):
digraph { /* (0,(1,2), length) */
3 [label="0(3)"];
1034 [label="1(3)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
-2059 [label="-2(3)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> 3096;
 1034 -> -2059;
 5158 -> 4127;
 4127 -> 1034;
 3096 -> 5158;
 3096 -> 4127;
 -2059 -> 6191;
 2067 -> 6191;
}
6:(0,(1,3), i)
GraphDua((0,(1,3), i)):
digraph { /* (0,(1,3), i) */
-3090 [label="-3(3)"];
3 [label="0(3)"];
1034 [label="1(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 -3090 -> 5159;
 -3090 -> 4128;
 -3090 -> 5160;
 -3090 -> 4129;
 3 -> 1034;
 1034 -> -3090;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 3097 -> 5160;
 3097 -> 4129;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 5160;
 3098 -> 4129;
}
7:(0,(1,2), i)
GraphDua((0,(1,2), i)):
digraph { /* (0,(1,2), i) */
3 [label="0(3)"];
1034 [label="1(3)"];
-2059 [label="-2(3)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> -2059;
 -2059 -> 6191;
 2067 -> 6191;
}
8:(0,(3,5), i)
GraphDua((0,(3,5), i)):
digraph { /* (0,(3,5), i) */
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
-5152 [label="-5(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 3 -> 1034;
 1034 -> 3096;
 3096 -> -5152;
 -5152 -> 4128;
 -5152 -> 4129;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 4128;
 3097 -> 5159;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
9:(0,(3,4), i)
GraphDua((0,(3,4), i)):
digraph { /* (0,(3,4), i) */
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
-4121 [label="-4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> 3096;
 3096 -> -4121;
 -4121 -> 1035;
 -4121 -> 1036;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
10:(0,4, i)
GraphDua((0,4, i)):
digraph { /* (0,4, i) */
3 [label="0(3)"];
1034 [label="1(3)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> 3096;
 5158 -> 4127;
 4127 -> 1035;
 4127 -> 1036;
 3096 -> 5158;
 3096 -> 4127;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
11:(0,5, i)
GraphDua((0,5, i)):
digraph { /* (0,5, i) */
3 [label="0(3)"];
1034 [label="1(3)"];
5158 [label="5(3)"];
3096 [label="3(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 3 -> 1034;
 1034 -> 3096;
 5158 -> 4128;
 5158 -> 4129;
 3096 -> 5158;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
12:(0,2, max)
GraphDua((0,2, max)):
digraph { /* (0,2, max) */
2065 [label="2(3)"];
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
4127 [label="4(3)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 2065 -> 6191;
 3 -> 1034;
 1034 -> 3096;
 1034 -> 2065;
 3096 -> 4127;
 4127 -> 1034;
 2067 -> 6191;
}
13:(0,(3,5), max)
GraphDua((0,(3,5), max)):
digraph { /* (0,(3,5), max) */
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
4127 [label="4(3)"];
-5152 [label="-5(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 3 -> 1034;
 1034 -> 3096;
 3096 -> 4127;
 3096 -> -5152;
 4127 -> 1034;
 -5152 -> 4128;
 -5152 -> 4129;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 4128;
 3097 -> 5159;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
14:(0,(3,4), max)
GraphDua((0,(3,4), max)):
digraph { /* (0,(3,4), max) */
3 [label="0(3)"];
1034 [label="1(3)"];
3096 [label="3(3)"];
-4121 [label="-4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 3 -> 1034;
 1034 -> 3096;
 3096 -> -4121;
 -4121 -> 1035;
 -4121 -> 1036;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
15:(5,2, max)
GraphDua((5,2, max)):
digraph { /* (5,2, max) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
3094 [label="3(1)"];
4125 [label="4(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
2065 [label="2(3)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
1034 [label="1(3)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4126;
 5156 -> 4127;
 3094 -> 5156;
 3094 -> 4125;
 4125 -> 1032;
 5157 -> 4126;
 5157 -> 4127;
 4126 -> 1033;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 2065 -> 6191;
 5158 -> 4127;
 4127 -> 1034;
 3096 -> 4127;
 1034 -> 3096;
 1034 -> 2065;
 2067 -> 6191;
}
16:(5,(3,5), max)
GraphDua((5,(3,5), max)):
digraph { /* (5,(3,5), max) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
3094 [label="3(1)"];
4125 [label="4(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
-5152 [label="-5(3)"];
1034 [label="1(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4126;
 5156 -> 4127;
 3094 -> 5156;
 3094 -> 4125;
 4125 -> 1032;
 5157 -> 4126;
 5157 -> 4127;
 4126 -> 1033;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 5158 -> 4127;
 4127 -> 1034;
 3096 -> 4127;
 3096 -> -5152;
 -5152 -> 4128;
 -5152 -> 4129;
 1034 -> 3096;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 4128;
 3097 -> 5159;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
17:(5,(3,4), max)
GraphDua((5,(3,4), max)):
digraph { /* (5,(3,4), max) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
3094 [label="3(1)"];
4125 [label="4(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
-4121 [label="-4(3)"];
1034 [label="1(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4126;
 5156 -> 4127;
 3094 -> 4125;
 3094 -> 5156;
 4125 -> 1032;
 5157 -> 4126;
 5157 -> 4127;
 4126 -> 1033;
 3095 -> 4126;
 3095 -> 5157;
 1033 -> 3095;
 5158 -> 4127;
 4127 -> 1034;
 3096 -> -4121;
 -4121 -> 1035;
 -4121 -> 1036;
 1034 -> 3096;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
18:(4,(1,3), i)
GraphDua((4,(1,3), i)):
digraph { /* (4,(1,3), i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
-3090 [label="-3(3)"];
1034 [label="1(3)"];
4127 [label="4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 5156;
 3094 -> 4125;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 -3090 -> 5159;
 -3090 -> 4128;
 -3090 -> 5160;
 -3090 -> 4129;
 1034 -> -3090;
 4127 -> 1034;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 3097 -> 5160;
 3097 -> 4129;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 5160;
 3098 -> 4129;
}
19:(4,(1,2), i)
GraphDua((4,(1,2), i)):
digraph { /* (4,(1,2), i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
1034 [label="1(3)"];
-2059 [label="-2(3)"];
4127 [label="4(3)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 5156;
 3094 -> 4125;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 1034 -> -2059;
 -2059 -> 6191;
 4127 -> 1034;
 2067 -> 6191;
}
20:(4,(3,5), i)
GraphDua((4,(3,5), i)):
digraph { /* (4,(3,5), i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
3096 [label="3(3)"];
-5152 [label="-5(3)"];
1034 [label="1(3)"];
4127 [label="4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 5156;
 3094 -> 4125;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 3096 -> -5152;
 -5152 -> 4128;
 -5152 -> 4129;
 1034 -> 3096;
 4127 -> 1034;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 4128;
 3097 -> 5159;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}
21:(4,(3,4), i)
GraphDua((4,(3,4), i)):
digraph { /* (4,(3,4), i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
3096 [label="3(3)"];
-4121 [label="-4(3)"];
1034 [label="1(3)"];
4127 [label="4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 4125;
 3094 -> 5156;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 4126;
 3095 -> 5157;
 1033 -> 3095;
 3096 -> -4121;
 -4121 -> 1035;
 -4121 -> 1036;
 1034 -> 3096;
 4127 -> 1034;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
22:(4,4, i)
GraphDua((4,4, i)):
digraph { /* (4,4, i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
5158 [label="5(3)"];
4127 [label="4(3)"];
3096 [label="3(3)"];
1034 [label="1(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 5156;
 3094 -> 4125;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 5158 -> 4127;
 4127 -> 1034;
 4127 -> 1035;
 4127 -> 1036;
 3096 -> 5158;
 3096 -> 4127;
 1034 -> 3096;
 4128 -> 1035;
 4128 -> 1036;
 1035 -> 3097;
 5159 -> 4128;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 2067;
 2067 -> 6191;
}
23:(4,5, i)
GraphDua((4,5, i)):
digraph { /* (4,5, i) */
1 [label="0(1)"];
1032 [label="1(1)"];
5156 [label="5(1)"];
4125 [label="4(1)"];
3094 [label="3(1)"];
5157 [label="5(2)"];
4126 [label="4(2)"];
3095 [label="3(2)"];
1033 [label="1(2)"];
5158 [label="5(3)"];
3096 [label="3(3)"];
1034 [label="1(3)"];
4127 [label="4(3)"];
4128 [label="4(4)"];
1035 [label="1(4)"];
5159 [label="5(4)"];
3097 [label="3(4)"];
4129 [label="4(5)"];
1036 [label="1(5)"];
2067 [label="2(5)"];
6191 [label="6(5)"];
5160 [label="5(5)"];
3098 [label="3(5)"];
 1 -> 1032;
 1032 -> 3094;
 5156 -> 4125;
 4125 -> 1033;
 4125 -> 1034;
 3094 -> 5156;
 3094 -> 4125;
 5157 -> 4126;
 4126 -> 1033;
 4126 -> 1034;
 3095 -> 5157;
 3095 -> 4126;
 1033 -> 3095;
 5158 -> 4128;
 5158 -> 4129;
 3096 -> 5158;
 1034 -> 3096;
 4127 -> 1034;
 4128 -> 1035;
 1035 -> 3097;
 5159 -> 4128;
 5159 -> 4129;
 3097 -> 5159;
 3097 -> 4128;
 4129 -> 1036;
 1036 -> 3098;
 1036 -> 2067;
 2067 -> 6191;
 5160 -> 4129;
 3098 -> 4129;
}

Process finished with exit code 0

