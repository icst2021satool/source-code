digraph _readBinary {
18 [label="18\n493-496"]
4 [label="4\n428-428"]
24 [label="24\n466-466"]
38 [label="38\n418-418"]
34 [label="34\n450-450"]
37 [label="37\n429-431"]
22 [label="22\n485-485"]
19 [label="19\n519-520"]
12 [label="12\n490-490"]
9 [label="9\n482-484"]
30 [label="30\n459-459"]
42 [label="42\n412-412"]
21 [label="21\n521-522"]
29 [label="29\n469-469"]
2 [label="2\n414-415"]
28 [label="28\n473-473"]
33 [label="33\n460-462"]
17 [label="17\n492-492"]
13 [label="13\n500-500"]
14 [label="14\n507-510"]
6 [label="6\n441-443"]
27 [label="27\n476-478"]
35 [label="35\n444-444"]
25 [label="25\n468-468"]
1 [label="1\n411-411"]
7 [label="7\n446-449"]
36 [label="36\n439-439"]
40 [label="40\n423-423"]
23 [label="23\n457-457"]
11 [label="11\n514-518"]
31 [label="31\n464-464"]
26 [label="26\n471-472"]
39 [label="39\n421-422"]
20 [label="20\n524-524"]
0 [label="0\n403-405"]
8 [label="8\n452-456"]
15 [label="15\n492-492"]
41 [label="41\n419-419"]
3 [label="3\n416-417"]
10 [label="10\n487-489"]
5 [label="5\n434-438"]
32 [label="32\n459-459"]
16 [label="16\n498-498"]
43 [label="43"]
{
node [shape=plaintext, fontsize=14];
setsNode_18 [label="def(18)={outputPtr}\nuse(18)={buffer,this._inputEnd,decodedData}"];
setsNode_34 [label="use(34)={this}"];
setsNode_37 [label="def(37)={outputPtr,outputCount}\nuse(37)={out,buffer,this._inputEnd,this._inputBuffer}"];
setsNode_22 [label="use(22)={this}"];
setsNode_19 [label="use(19)={this}"];
setsNode_9 [label="def(9)={decodedData}\nuse(9)={bits,decodedData}"];
setsNode_42 [label="use(42)={this}"];
setsNode_21 [label="def(21)={outputCount}\nuse(21)={out,buffer,this._inputEnd,this._inputBuffer}"];
setsNode_29 [label="use(29)={this}"];
setsNode_2 [label="def(2)={this._inputPtr,ch}\nuse(2)={this,outputEnd,ch}"];
setsNode_28 [label="use(28)={this,b64variant,outputCount}"];
setsNode_33 [label="def(33)={outputPtr}\nuse(33)={buffer,this._inputEnd,decodedData}"];
setsNode_14 [label="def(14)={outputPtr}\nuse(14)={buffer,this._inputEnd,decodedData}"];
setsNode_6 [label="def(6)={this._inputPtr,ch,bits}\nuse(6)={this,b64variant,outputEnd,ch}"];
setsNode_27 [label="def(27)={outputPtr}\nuse(27)={buffer,this._inputEnd,decodedData}"];
setsNode_35 [label="def(35)={bits}\nuse(35)={this,b64variant,outputCount}"];
setsNode_7 [label="def(7)={decodedData}\nuse(7)={bits,decodedData}"];
setsNode_36 [label="use(36)={this}"];
setsNode_11 [label="def(11)={outputPtr}\nuse(11)={buffer,this._inputEnd,bits,decodedData}"];
setsNode_31 [label="def(31)={bits}\nuse(31)={this,b64variant,outputCount}"];
setsNode_26 [label="def(26)={this._inputPtr,ch}\nuse(26)={this,outputEnd,ch}"];
setsNode_39 [label="def(39)={bits}\nuse(39)={this,b64variant,outputCount}"];
setsNode_20 [label="use(20)={this._inputBuffer}"];
setsNode_0 [label="def(0)={this,b64variant,out,buffer,this._inputEnd,this._inputPtr,this._inputBuffer,outputPtr,outputEnd,outputCount}"];
setsNode_8 [label="def(8)={this._inputPtr,ch,bits}\nuse(8)={this,b64variant,outputEnd,ch}"];
setsNode_3 [label="def(3)={bits}\nuse(3)={b64variant,outputCount}"];
setsNode_10 [label="def(10)={this._inputPtr,ch,bits}\nuse(10)={this,b64variant,outputEnd,ch}"];
setsNode_5 [label="def(5)={decodedData}\nuse(5)={bits}"];
setsNode_16 [label="def(16)={bits}\nuse(16)={this,b64variant,outputCount}"];
}
{rank = same; 18 ;  setsNode_18}
{rank = same; 34 ;  setsNode_34}
{rank = same; 37 ;  setsNode_37}
{rank = same; 22 ;  setsNode_22}
{rank = same; 19 ;  setsNode_19}
{rank = same; 9 ;  setsNode_9}
{rank = same; 42 ;  setsNode_42}
{rank = same; 21 ;  setsNode_21}
{rank = same; 29 ;  setsNode_29}
{rank = same; 2 ;  setsNode_2}
{rank = same; 28 ;  setsNode_28}
{rank = same; 33 ;  setsNode_33}
{rank = same; 14 ;  setsNode_14}
{rank = same; 6 ;  setsNode_6}
{rank = same; 27 ;  setsNode_27}
{rank = same; 35 ;  setsNode_35}
{rank = same; 7 ;  setsNode_7}
{rank = same; 36 ;  setsNode_36}
{rank = same; 11 ;  setsNode_11}
{rank = same; 31 ;  setsNode_31}
{rank = same; 26 ;  setsNode_26}
{rank = same; 39 ;  setsNode_39}
{rank = same; 20 ;  setsNode_20}
{rank = same; 0 ;  setsNode_0}
{rank = same; 8 ;  setsNode_8}
{rank = same; 3 ;  setsNode_3}
{rank = same; 10 ;  setsNode_10}
{rank = same; 5 ;  setsNode_5}
{rank = same; 16 ;  setsNode_16}
18 -> 19;
4 -> 37[label="use(4,37)={this._inputEnd,this._inputPtr}",fontsize=14];4 -> 5[label="use(4,5)={this._inputEnd,this._inputPtr}",fontsize=14];
24 -> 25[label="use(24,25)={bits}",fontsize=14];24 -> 9[label="use(24,9)={bits}",fontsize=14];
38 -> 41[label="use(38,41)={outputCount}",fontsize=14];38 -> 39[label="use(38,39)={outputCount}",fontsize=14];
34 -> 8;
37 -> 5;
22 -> 10;
19 -> 21[label="use(19,21)={this._inputEnd}",fontsize=14];19 -> 20[label="use(19,20)={this._inputEnd}",fontsize=14];
12 -> 15[label="use(12,15)={bits}",fontsize=14];12 -> 13[label="use(12,13)={bits}",fontsize=14];
9 -> 22[label="use(9,22)={this,outputPtr,outputEnd}",fontsize=14];9 -> 10[label="use(9,10)={this,outputPtr,outputEnd}",fontsize=14];
30 -> 32[label="use(30,32)={outputCount}",fontsize=14];30 -> 31[label="use(30,31)={outputCount}",fontsize=14];
42 -> 2;
21 -> 20;
29 -> 26;
2 -> 3[label="use(2,3)={outputCount}",fontsize=14];2 -> 1[label="use(2,1)={outputCount}",fontsize=14];
28 -> 43;
33 -> 19;
17 -> 18[label="use(17,18)={b64variant}",fontsize=14];17 -> 16[label="use(17,16)={b64variant}",fontsize=14];
13 -> 14[label="use(13,14)={bits}",fontsize=14];13 -> 11[label="use(13,11)={bits}",fontsize=14];
14 -> 1;
6 -> 35[label="use(6,35)={bits}",fontsize=14];6 -> 7[label="use(6,7)={bits}",fontsize=14];
27 -> 1;
35 -> 7;
25 -> 29[label="use(25,29)={this,outputPtr,outputEnd}",fontsize=14];25 -> 26[label="use(25,26)={this,outputPtr,outputEnd}",fontsize=14];
1 -> 42[label="use(1,42)={this,outputPtr,outputEnd}",fontsize=14];1 -> 2[label="use(1,2)={this,outputPtr,outputEnd}",fontsize=14];
7 -> 34[label="use(7,34)={this,outputPtr,outputEnd}",fontsize=14];7 -> 8[label="use(7,8)={this,outputPtr,outputEnd}",fontsize=14];
36 -> 6;
40 -> 1;
23 -> 30[label="use(23,30)={bits}",fontsize=14];23 -> 24[label="use(23,24)={bits}",fontsize=14];
11 -> 1;
31 -> 24;
26 -> 28[label="use(26,28)={b64variant,outputCount}",fontsize=14];26 -> 27[label="use(26,27)={b64variant,outputCount}",fontsize=14];
39 -> 40[label="use(39,40)={bits}",fontsize=14];39 -> 4[label="use(39,4)={bits}",fontsize=14];
20 -> 43;
0 -> 1;
8 -> 23[label="use(8,23)={bits}",fontsize=14];8 -> 9[label="use(8,9)={bits}",fontsize=14];
15 -> 17[label="use(15,17)={outputCount}",fontsize=14];15 -> 16[label="use(15,16)={outputCount}",fontsize=14];
41 -> 19;
3 -> 38[label="use(3,38)={bits}",fontsize=14];3 -> 4[label="use(3,4)={bits}",fontsize=14];
10 -> 12[label="use(10,12)={bits}",fontsize=14];10 -> 11[label="use(10,11)={bits}",fontsize=14];
5 -> 36[label="use(5,36)={this,outputPtr,outputEnd}",fontsize=14];5 -> 6[label="use(5,6)={this,outputPtr,outputEnd}",fontsize=14];
32 -> 33[label="use(32,33)={b64variant}",fontsize=14];32 -> 31[label="use(32,31)={b64variant}",fontsize=14];
16 -> 13;
}
